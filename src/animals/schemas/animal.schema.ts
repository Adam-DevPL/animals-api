import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { ApiProperty, ApiTags } from '@nestjs/swagger';
import { HydratedDocument, Types } from 'mongoose';
import { AnimalType } from 'src/types/animals.type';

export type AnimalDocument = HydratedDocument<Animal>;

@ApiTags('animals')
@Schema()
export class Animal {
  @ApiProperty({ description: 'Animal name', type: 'string', example: 'Cat' })
  @Prop({ required: true })
  animalName: string;

  @ApiProperty({
    description: `One of Animal types - ${Object.values(AnimalType)}`,
    type: 'AnimalType',
    example: AnimalType.MAMMALS,
  })
  @Prop({ required: true })
  type: AnimalType;

  @ApiProperty({
    description: 'Date when animal was added to database',
    type: 'Date',
    example: '2020-01-24T19:24:46.366Z',
  })
  @Prop({ required: true })
  createdAt: Date;

  @ApiProperty({
    description: 'Optional description',
    type: 'string',
    example: 'test description',
  })
  @Prop()
  description?: string;
}

export class AnimalWithId extends Animal {
  @ApiProperty({
    type: 'ObjectId',
    example: '507f1f77bcf86cd799439011',
    description: 'ID generated by mongodb',
  })
  _id: Types.ObjectId;
}

export const AnimalSchema = SchemaFactory.createForClass(Animal);
